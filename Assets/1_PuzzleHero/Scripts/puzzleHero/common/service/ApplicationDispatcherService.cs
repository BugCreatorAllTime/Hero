// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using strange.extensions.context.api;

public class ApplicationDispatcherService
{
	[Inject(ContextKeys.CONTEXT_VIEW)]
	public GameObject contextView{ get; set; }

	public DispatcherRunner dispatcher;

	public ApplicationDispatcherService ()
	{
	}

	[PostConstruct]
	public void Init()
	{
		dispatcher = contextView.AddComponent<DispatcherRunner>();
	}

}

public class DispatcherRunner : MonoBehaviour
{
	public delegate void OnApplicationPauseEvent(bool pauseStatus);
	public delegate void OnAwakeEvent();
	public delegate void OnApplicationQuitEvent();
	public delegate void OnLevelWasLoadedEvent(int level);
	public event OnApplicationPauseEvent OnApplicationPauseHandler;
	public event OnApplicationQuitEvent OnApplicationQuitHandler;
	public event OnAwakeEvent OnAwakeHandler;
	public event OnLevelWasLoadedEvent OnLevelWasLoadedHandler;
	
	void Awake()
	{
		if(OnAwakeHandler != null)
			OnAwakeHandler();
	}
	
	void OnApplicationPause(bool pauseStatus)
	{
		if(OnApplicationPauseHandler != null)
			OnApplicationPauseHandler(pauseStatus);
	}
	
	void OnApplicationQuit() 
	{
		if(OnApplicationQuitHandler != null)
			OnApplicationQuitHandler();
	}

	void OnLevelWasLoaded(int level)
	{
		if (OnLevelWasLoadedHandler != null)
		{
			OnLevelWasLoadedHandler(level);
		}
	}
}


